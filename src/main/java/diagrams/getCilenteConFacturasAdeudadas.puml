@startuml
actor Usuario
participant ClienteController
participant Cliente
participant Factura
participant PagoFactura

Usuario -> ClienteController: getClienteConFacturasImpagas(cantFacturas)
activate ClienteController
ClienteController -> ClienteController: crear lista result vacÃ­a
loop por cada cliente
    ClienteController -> Cliente: tieneFacturasImpagas(cantFacturas)
    activate Cliente
    Cliente -> Cliente: getFacturas()
    loop por cada factura
        Cliente -> Factura: getTotal()
        Factura --> Cliente: total
        Cliente -> Factura: getTotalPagado()
        Factura --> Cliente: totalPagado
        opt Si total > totalPagado
            Cliente -> Cliente: incrementa contador de impagas
        end
    end
    Cliente --> ClienteController: retorna true/false si tiene facturas impagas
    deactivate Cliente
    opt [facturasImpagas >= cantFacturas]
        ClienteController -> ClienteController: agregar datos del cliente a result
    end
end
ClienteController -> Usuario: retorna lista de datos de clientes
deactivate ClienteController
@enduml